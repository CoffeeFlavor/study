<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <!-- Servlet Filters ================================================ -->

  <!--
    - Declare a filter for multipart MIME handling

    -->
  <display-name> Sample Maven Project:Account Service</display-name>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <context-param>
    <param-name>contextConfigLocation></param-name>
    <param-value>
      classpath:/account-email.xml
      classpath:/account-persist.xml
      classpath:/account-captcha.xml
      classpath:/account-service.xml
    </param-value>
  </context-param>
  <servlet>
    <servlet-name>CaptchaImageServlet</servlet-name>
    <servlet-class>com.jennie.study.account.web.CaptchaImageServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>SignUpServlet</servlet-name>
    <servlet-class>com.jennie.study.account.web.SignUpServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>ActivateServlet</servlet-name>
    <servlet-class>com.jennie.study.account.web.ActivateServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>com.jennie.study.account.web.LoginServlet</servlet-class>
  </servlet>

  <!-- Filter mappings ================================================ -->

  <!--
    - Use the Cocoon multipart filter together with the Cocoon demo webapp
    -->

  <servlet-mapping>
    <servlet-name>CaptchaImageServlet</servlet-name>
    <url-pattern>/captcha_image</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>SignUpServlet</servlet-name>
    <url-pattern>/signup</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ActivateServlet</servlet-name>
    <url-pattern>/activate</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/login</url-pattern>
  </servlet-mapping>
  <!--
    - Use the Cocoon debug filter together with the Cocoon demo webapp
  <filter-mapping>
    <filter-name>CocoonDebugFilter</filter-name>
    <servlet-name>Cocoon</servlet-name>
  </filter-mapping>
    -->

  <!-- Servlet Context Listener ======================================= -->

  <!--
    - Declare Spring context listener which sets up the Spring Application Context
    - containing all Cocoon components (and user defined beans as well).
    -->


  <!--
    - Declare Spring request listener which sets up the required RequestAttributes
    - to support Springs and Cocoon custom bean scopes like the request scope or the
    - session scope.
    -->
<!--  <listener>-->
<!--    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>-->
<!--  </listener>-->

<!--  &lt;!&ndash; Servlet Configuration ========================================== &ndash;&gt;-->

<!--  &lt;!&ndash;-->
<!--    - Servlet that dispatches requests to the Spring managed block servlets-->
<!--    &ndash;&gt;-->
<!--  <servlet>-->
<!--    <description>Cocoon blocks dispatcher</description>-->
<!--    <display-name>DispatcherServlet</display-name>-->
<!--    <servlet-name>DispatcherServlet</servlet-name>-->
<!--    <servlet-class>org.apache.cocoon.servletservice.DispatcherServlet</servlet-class>-->
<!--    <load-on-startup>1</load-on-startup>-->
<!--  </servlet>-->

<!--  &lt;!&ndash; URL space mappings ============================================= &ndash;&gt;-->

<!--  &lt;!&ndash;-->
<!--    - Cocoon handles all the URL space assigned to the webapp using its sitemap.-->
<!--    - It is recommended to leave it unchanged. Under some circumstances though-->
<!--    - (like integration with proprietary webapps or servlets) you might have-->
<!--    - to change this parameter.-->
<!--    &ndash;&gt;-->
<!--  <servlet-mapping>-->
<!--    <servlet-name>DispatcherServlet</servlet-name>-->
<!--    <url-pattern>/*</url-pattern>-->
<!--  </servlet-mapping>-->

</web-app>
        